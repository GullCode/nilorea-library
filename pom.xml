<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<groupId>cnaf.ocda.clibrary</groupId>
	<artifactId>-junit15-nilorea-c-library</artifactId>
	<version>1.0.1</version>
	<modelVersion>4.0.0</modelVersion>
	<packaging>nar</packaging>


	<properties>
		<prop.cnaf.balf.projet>test@cnaf.fr</prop.cnaf.balf.projet>
		<prop.cnaf.deploiement>cloudoracle</prop.cnaf.deploiement> <!-- [cloudoracle (déploiement weblo)] ou [datacentercnaf (déploiement tomcat 
			embedded)] -->
		<prop.cnaf.direction>DNE</prop.cnaf.direction>
		<prop.cnaf.sonar.exclusions>pom.xml</prop.cnaf.sonar.exclusions>
		<prop.cnaf.sonar.sourceEncoding>UTF-8</prop.cnaf.sonar.sourceEncoding>
		<prop.cnaf.couche>back</prop.cnaf.couche>
		<prop.cnaf.sonar.java.binaries>target/classes</prop.cnaf.sonar.java.binaries>
		<prop.cnaf.sonar.java.libraries>target/*.jar</prop.cnaf.sonar.java.libraries>
	</properties>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Edgware.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<defaultGoal>integration-test</defaultGoal>
		<plugins>
			<plugin>
				<groupId>com.github.maven-nar</groupId>
				<artifactId>nar-maven-plugin</artifactId>
				<version>3.2.3</version>
				<extensions>true</extensions>
				<configuration>
					<libraries>
						<library>
							<type>jni</type>
							<narSystemPackage>com.github.jjYBdx4IL.maven.examples.nar</narSystemPackage>
						</library>
					</libraries>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.10</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/nar/nar-generated/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<!-- The following dependency is needed to automatically load the native 
			libs from .nar files. This makes running NativeApp.java directly from within 
			NetBeans work. Fixes issue 1, https://github.com/jjYBdx4IL/example-maven-project-setups/issues/1 
			Update: this is already done by jna. -->
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>native-lib-loader</artifactId>
			<version>2.1.3</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>cygwin</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.maven-nar</groupId>
						<artifactId>nar-maven-plugin</artifactId>
						<configuration>
							<gnuUseOnWindows>true</gnuUseOnWindows>

							<c>
								<!-- add your equivalent of C:\cygwin64\bin to your PATH environment 
									variable -->
								<name>gcc</name>
								<includes>
									<include>**/*.c</include>
								</includes>
								<options>
									<option>-D__int64=int64_t</option>
									<option>-I${JAVA_HOME}/include</option>
									<option>-I${JAVA_HOME}/include/win32</option>
									<option>${java.os.include}</option>
									<option>${stack.protector.option}</option>
									<option>${architecture.option}</option>
									<option>${subsystem.option}</option>
									<option>${debug.option}</option>
									<option>-shared</option>
									<option>-fexceptions</option>
									<option>-lstdc++</option>
								</options>
							</c>

							<linker>
								<name>gcc</name>
								<options>
									<option>${architecture.option}</option>
									<option>${subsystem.option}</option>
								</options>
							</linker>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>